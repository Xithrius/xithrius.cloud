version: "3"

services:
  caddy:
    image: caddy:latest
    restart: always

    ports:
      - "80:80"
      - "443:443"

    volumes:
      - $PWD/services/caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config

  site:
    build:
      context: site
      dockerfile: Dockerfile

    restart: always

    environment:
      COLLECTD_DOCKER_APP: site

    depends_on:
      - caddy

    ports:
      - "8001:8001"

  site_guides:
    build:
      context: site_guides
      dockerfile: Dockerfile

    restart: always

    depends_on:
      - caddy

    ports:
      - "2000:2000"

  postgres:
    image: postgres:14-alpine
    restart: always

    environment:
      COLLECTD_DOCKER_APP: graphite
      POSTGRES_DB: site
      POSTGRES_PASSWORD: site
      POSTGRES_USER: site

    ports:
      - "7777:5432"

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U site"]
      interval: 2s
      timeout: 1s
      retries: 5

    volumes:
      - $PWD/services/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro

  grafana:
    image: 'grafana/grafana'
    restart: always

    depends_on:
      - caddy

    ports:
      - "3000:3000"

    volumes:
      - grafana-storage:/var/lib/grafana

  prometheus:
    image: 'prom/prometheus'
    user: root
    restart: always

    depends_on:
      - grafana

    environment:
      COLLECTD_DOCKER_APP: prometheus

    ports:
      - "9090:9090"

    volumes:
      - $PWD/services/prometheus:/etc/prometheus/:rw
      - $PWD/data/prometheus/prometheus_data:/prometheus:rw

    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  graphite:
    image: 'graphiteapp/graphite-statsd'
    restart: always

    depends_on:
      - grafana

    environment:
      COLLECTD_DOCKER_APP: graphite

    ports:
      - "8000:80"
      - "2003-2004:2003-2004"
      - "2023-2024:2023-2024"
      - "8125:8125/udp"
      - "8126:8126"

  container_metrics:
    image: bobrik/collectd-docker
    restart: always

    depends_on:
      - graphite

    environment:
      COLLECTD_INTERVAL: 5
      GRAPHITE_HOST: graphite
      COLLECTD_HOST: xithriuscloud

    labels:
      - collectd_docker_app

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  caddy_data:
    external: true
  grafana-storage:
    external: true
  caddy_config:
